{"ast":null,"code":"var _jsxFileName = \"/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/SubmitTheNewTicket.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SubmitTheTicket = props => {\n  _s();\n\n  const [ticketDetail, setTicketDetail] = useState(null); // + adding the use\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    getData(); // we will use async/await to fetch this data\n\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getAllDevelopers\", requestOptions);\n      const apiResponseData = await response.json(); //console.log(apiResponseData);//remove this after use\n\n      setAllDevelopers(apiResponseData);\n    }\n  }, []);\n  let style = {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: \"20px\",\n    marginTop: \"30px\",\n    width: \"70%\"\n  };\n  return props.bucketNameDropdown === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: developers && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: developers.map((developer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: developer.developer_id,\n        children: developer.developer_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this))\n    }, void 0, false)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: developers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: developers.map((developer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        className: \"card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"teal\"\n          },\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\"\n            },\n            className: \"card-text\",\n            onClick: () => {\n              props.showAllTicketOfDev(developer.developer_id);\n            },\n            children: developer.developer_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SubmitTheTicket, \"STYTf9uEzdG4aNcrBinLf06Vldk=\");\n\n_c = SubmitTheTicket;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitTheTicket\");","map":{"version":3,"sources":["/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/SubmitTheNewTicket.js"],"names":["useState","useEffect","SubmitTheTicket","props","ticketDetail","setTicketDetail","requestOptions","method","headers","getData","response","fetch","apiResponseData","json","setAllDevelopers","style","marginLeft","marginRight","marginBottom","marginTop","width","bucketNameDropdown","developers","map","developer","index","developer_id","developer_name","backgroundColor","color","showAllTicketOfDev"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD,CADwC,CAExC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFY,KAAvB;AAKAC,IAAAA,OAAO,GANO,CAQd;;AACA,mBAAeA,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2CL,cAA3C,CAA5B;AACA,YAAMM,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA9B,CAFuB,CAGvB;;AACAC,MAAAA,gBAAgB,CAACF,eAAD,CAAhB;AACD;AACF,GAfQ,EAeN,EAfM,CAAT;AAgBA,MAAIG,KAAK,GAAC;AACRC,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,WAAW,EAAE,MAFL;AAGRC,IAAAA,YAAY,EAAE,MAHN;AAIRC,IAAAA,SAAS,EAAE,MAJH;AAKRC,IAAAA,KAAK,EAAE;AALC,GAAV;AAOA,SACEjB,KAAK,CAACkB,kBAAN,KAA6B,IAA7B,gBAAoC;AAAA,cACjCC,UAAU,iBACT;AAAA,gBACKA,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd;AAAoB,QAAA,KAAK,EAAED,SAAS,CAACE,YAArC;AAAA,kBAAoDF,SAAS,CAACG;AAA9D,SAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADL;AAFgC,mBAApC,gBAQM;AAAA,cACHH,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAEKA,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd;AAAM,QAAA,KAAK,EAAEV,KAAb;AAAoB,QAAA,SAAS,EAAC,kBAA9B;AAAA,+BACE;AAAQ,UAAA,KAAK,EAAE;AAACa,YAAAA,eAAe,EAAE;AAAlB,WAAf;AAAyC,UAAA,SAAS,EAAC,WAAnD;AAAA,iCACI;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC;AAAP,aAAV;AAA2B,YAAA,SAAS,EAAC,WAArC;AAAiD,YAAA,OAAO,EAAE,MAAI;AAAC1B,cAAAA,KAAK,CAAC2B,kBAAN,CAAyBN,SAAS,CAACE,YAAnC;AAAiD,aAAhH;AAAA,sBACCF,SAAS,CAACG;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF,SAAsDF,KAAtD;AAAA;AAAA;AAAA;AAAA,cADD;AAFL;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA,UATR;AA8BD,CAxDM;;GAAMvB,e;;KAAAA,e","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const SubmitTheTicket = (props) => {\n  const [ticketDetail, setTicketDetail] = useState(null);\n  // + adding the use\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n\n    };\n    getData();\n\n    // we will use async/await to fetch this data\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getAllDevelopers\", requestOptions);\n      const apiResponseData = await response.json();\n      //console.log(apiResponseData);//remove this after use\n      setAllDevelopers(apiResponseData);\n    }\n  }, []);\n  let style={\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: \"20px\",\n    marginTop: \"30px\",\n    width: \"70%\"\n  }\n  return (\n    props.bucketNameDropdown === true ? <>\n      {developers && (\n        <>\n            {developers.map((developer, index) => (\n              <option key={index} value={developer.developer_id}>{developer.developer_name}</option>\n            ))}\n          </>\n      )}\n    </> : <div>\n      {developers && (\n        <div className=\"projects\">\n          \n            {developers.map((developer, index) => (\n              <div  style={style} className=\"card text-center\" key={index}>\n                <button style={{backgroundColor: \"teal\"}}className=\"card-body\">\n                    <p style={{color:\"white\"}} className=\"card-text\" onClick={()=>{props.showAllTicketOfDev(developer.developer_id)}}>\n                    {developer.developer_name}\n                    </p>\n                    \n                    </button>\n            </div>\n              \n            ))}\n\n        </div>\n      )}\n    </div>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}