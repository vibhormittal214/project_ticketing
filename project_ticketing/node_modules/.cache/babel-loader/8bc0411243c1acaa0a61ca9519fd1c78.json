{"ast":null,"code":"var _jsxFileName = \"/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/SearchTicketById.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { GetTicketDetail } from './GetTicketDetails.js';\nimport { NoDataFoundComp } from './ShowNoDataFound.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchTicketById = props => {\n  _s();\n\n  const [ticketData, setTicketData] = useState(null);\n  let ticketId = props.ticketId;\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ticketId: ticketId\n      })\n    };\n    getData(); // we will use async/await to fetch this data\n\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/searchTicketById\", requestOptions);\n      const apiResponseData = await response.json();\n\n      if (apiResponseData.length > 0) {\n        setTicketData(apiResponseData);\n      }\n    }\n  }, [ticketId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [ticketData === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"gfdgd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this), ticketData !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NoDataFoundComp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchTicketById, \"K0xesA6kCpE4pHo3HPAehOlts0I=\");\n\n_c = SearchTicketById;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTicketById\");","map":{"version":3,"sources":["/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/SearchTicketById.js"],"names":["React","useState","useEffect","GetTicketDetail","NoDataFoundComp","SearchTicketById","props","ticketData","setTicketData","ticketId","requestOptions","method","headers","body","JSON","stringify","getData","response","fetch","apiResponseData","json","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAIQ,QAAQ,GAAGH,KAAK,CAACG,QAArB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,QAAQ,EAAEA;AAAZ,OAAf;AAHa,KAAvB;AAKAO,IAAAA,OAAO,GANK,CAQZ;;AACA,mBAAeA,OAAf,GAAyB;AACrB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2CR,cAA3C,CAA5B;AACA,YAAMS,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA9B;;AACA,UAAGD,eAAe,CAACE,MAAhB,GAAuB,CAA1B,EAA4B;AACxBb,QAAAA,aAAa,CAACW,eAAD,CAAb;AACH;AACJ;AACJ,GAhBQ,EAgBN,CAACV,QAAD,CAhBM,CAAT;AAiBA,sBACI;AAAA,eACCF,UAAU,KAAG,IAAb,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADtB,EAEKA,UAAU,KAAG,IAAb,iBAAqB;AAAA,6BAAK,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAF1B;AAAA,kBADJ;AAMH,CA1BM;;GAAMF,gB;;KAAAA,gB","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { GetTicketDetail } from './GetTicketDetails.js'\nimport { NoDataFoundComp } from './ShowNoDataFound.js'\nexport const SearchTicketById = (props) => {\n    const [ticketData, setTicketData] = useState(null);\n    let ticketId = props.ticketId\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ ticketId: ticketId}),\n        };\n        getData();\n\n        // we will use async/await to fetch this data\n        async function getData() {\n            const response = await fetch(\"http://localhost:8000/searchTicketById\", requestOptions);\n            const apiResponseData = await response.json();\n            if(apiResponseData.length>0){\n                setTicketData(apiResponseData);\n            }\n        }\n    }, [ticketId]);\n    return (\n        <>\n        {ticketData===null && <div>gfdgd</div>}\n            {ticketData!==null && <div><NoDataFoundComp /></div>}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}