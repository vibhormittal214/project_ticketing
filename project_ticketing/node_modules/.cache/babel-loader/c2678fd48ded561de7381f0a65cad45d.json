{"ast":null,"code":"var _jsxFileName = \"/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllProjects.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetAllProject = () => {\n  _s();\n\n  const [projects, setAllProjects] = useState(null); // + adding the use\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React Hooks POST Request Example'\n      })\n    };\n    getData(); // we will use async/await to fetch this data\n\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getProjectList\", requestOptions);\n      const data = await response.json();\n      console.log(data); // store the data into our books variable\n\n      setAllProjects(data);\n    }\n  }, []); // <- you may need to put the setBooks function in this array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game of Thrones Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), projects && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books\",\n      children: projects.map((individualProject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: individualProject.bucket_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetAllProject, \"jTYYFpGJbtLEhjN3wLZzNr/uDRo=\");\n\n_c = GetAllProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllProject\");","map":{"version":3,"sources":["/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllProjects.js"],"names":["useState","useEffect","GetAllProject","projects","setAllProjects","requestOptions","method","headers","body","JSON","stringify","title","getData","response","fetch","data","json","console","log","map","individualProject","index","bucket_name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAK;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BJ,QAAQ,CAAC,IAAD,CAA3C,CADgC,CAGhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHe,KAAvB;AAKAC,IAAAA,OAAO,GANO,CAQd;;AACA,mBAAeA,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAwCT,cAAxC,CAA5B;AACA,YAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHuB,CAIvB;;AACAX,MAAAA,cAAc,CAACW,IAAD,CAAd;AACD;AACF,GAhBQ,EAgBN,EAhBM,CAAT,CAJgC,CAoBxB;;AAER,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGZ,QAAQ,iBACP;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAGGA,QAAQ,CAACgB,GAAT,CAAa,CAACC,iBAAD,EAAoBC,KAApB,kBACZ;AAAA,+BACE;AAAA,oBAAKD,iBAAiB,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AAHH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzCM;;GAAMnB,a;;KAAAA,a","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const GetAllProject = ()=> {\n  const [projects, setAllProjects] = useState(null);\n\n  // + adding the use\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: 'React Hooks POST Request Example' })\n  };\n    getData();\n\n    // we will use async/await to fetch this data\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getProjectList\",requestOptions);\n      const data = await response.json();\n      console.log(data);\n      // store the data into our books variable\n      setAllProjects(data) ;\n    }\n  }, []); // <- you may need to put the setBooks function in this array\n\n  return (\n    <div>\n      <h1>Game of Thrones Books</h1>\n  \n      {/* display books from the API */}\n      {projects && (\n        <div className=\"books\">\n  \n          {/* loop over the books */}\n          {projects.map((individualProject, index) => (\n            <div key={index}>\n              <h2>{individualProject.bucket_name}</h2>\n            </div>\n          ))}\n  \n        </div>\n      )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}