{"ast":null,"code":"var _jsxFileName = \"/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllTicketFromApi.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { AllTickets } from './AllTickets.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetAllTickets = props => {\n  _s();\n\n  console.log(props);\n  const [tickets, getAllTheTickets] = useState(null);\n\n  const onDelete = particularTicket => {\n    console.log(\"I am ticket of\", particularTicket);\n  }; // + adding the use\n\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    getData(); // we will use async/await to fetch this data\n\n    async function getData() {\n      console.log(\"hrere\");\n      const response = await fetch(\"http://localhost:8000/getAllTickets\", requestOptions);\n      const apiResponseData = await response.json();\n      console.log(\"hrer\");\n      console.log(apiResponseData); //console.log(apiResponseData);//remove this after use\n\n      getAllTheTickets(apiResponseData);\n    }\n  }, []); //console.log(tickets);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tickets && /*#__PURE__*/_jsxDEV(AllTickets, {\n      allTheTickets: tickets,\n      showAllTicket: props.showAllTickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_s(GetAllTickets, \"9wcaqR2whD12qvq9Fi7c/R89niM=\");\n\n_c = GetAllTickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllTickets\");","map":{"version":3,"sources":["/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllTicketFromApi.js"],"names":["useState","useEffect","AllTickets","GetAllTickets","props","console","log","tickets","getAllTheTickets","onDelete","particularTicket","requestOptions","method","headers","getData","response","fetch","apiResponseData","json","showAllTickets"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,OAAD,EAAUC,gBAAV,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMS,QAAQ,GAAIC,gBAAD,IAAsB;AACrCL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,gBAA9B;AACD,GAFD,CAHsC,CAMtC;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFY,KAAvB;AAIAC,IAAAA,OAAO,GALO,CAOd;;AACA,mBAAeA,OAAf,GAAyB;AACvBT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwCL,cAAxC,CAA5B;AACA,YAAMM,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA9B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYW,eAAZ,EALuB,CAMvB;;AACAT,MAAAA,gBAAgB,CAACS,eAAD,CAAhB;AACD;AACF,GAjBQ,EAiBN,EAjBM,CAAT,CAPsC,CAyBtC;;AACA,sBACE;AAAA,cACEV,OAAO,iBAAK,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEA,OAA3B;AAAqC,MAAA,aAAa,EAAEH,KAAK,CAACe;AAA1D;AAAA;AAAA;AAAA;AAAA;AADd,mBADF;AAKD,CA/BM;;GAAMhB,a;;KAAAA,a","sourcesContent":["import { useState, useEffect } from 'react';\nimport { AllTickets } from './AllTickets.js';\nexport const GetAllTickets = (props) => {\n  console.log(props);\n  const [tickets, getAllTheTickets] = useState(null);\n  const onDelete = (particularTicket) => {\n    console.log(\"I am ticket of\", particularTicket);\n  }\n  // + adding the use\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    getData();\n\n    // we will use async/await to fetch this data\n    async function getData() {\n      console.log(\"hrere\");\n      const response = await fetch(\"http://localhost:8000/getAllTickets\", requestOptions);\n      const apiResponseData = await response.json();\n      console.log(\"hrer\");\n      console.log(apiResponseData);\n      //console.log(apiResponseData);//remove this after use\n      getAllTheTickets(apiResponseData);\n    }\n  }, []);\n  //console.log(tickets);\n  return (\n    <>\n     {tickets &&  <AllTickets allTheTickets={tickets}  showAllTicket={props.showAllTickets}/>}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}