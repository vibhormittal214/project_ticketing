{"ast":null,"code":"var _jsxFileName = \"/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllProjects.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetAllProject = props => {\n  _s();\n\n  const [projects, setAllProjects] = useState(null); // + adding the use\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    getData(); // we will use async/await to fetch this data\n\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getProjectList\", requestOptions);\n      const apiResponseData = await response.json(); //console.log(apiResponseData);//remove this after use\n\n      setAllProjects(apiResponseData);\n    }\n  }, []); // <- you may need to put the setBooks function in this array\n\n  return props.bucketNameDropdown == true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: projects && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: projects.map((individualProject, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: individualProject.bucket_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 43\n  }, this);\n};\n\n_s(GetAllProject, \"jTYYFpGJbtLEhjN3wLZzNr/uDRo=\");\n\n_c = GetAllProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllProject\");","map":{"version":3,"sources":["/home/vibhor/Desktop/project_ticketing/project_ticketing/src/HuddleComponents/GetAllProjects.js"],"names":["useState","useEffect","GetAllProject","props","projects","setAllProjects","requestOptions","method","headers","getData","response","fetch","apiResponseData","json","bucketNameDropdown","map","individualProject","index","bucket_name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BL,QAAQ,CAAC,IAAD,CAA3C,CADsC,CAGtC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFY,KAAvB;AAKAC,IAAAA,OAAO,GANO,CAQd;;AACA,mBAAeA,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyCL,cAAzC,CAA5B;AACA,YAAMM,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA9B,CAFuB,CAGvB;;AACAR,MAAAA,cAAc,CAACO,eAAD,CAAd;AACD;AACF,GAfQ,EAeN,EAfM,CAAT,CAJsC,CAmB9B;;AAER,SACET,KAAK,CAACW,kBAAN,IAA0B,IAA1B,GAAiC,EAAjC,gBAAsC;AAAA,cACnCV,QAAQ,iBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA,kBAEGA,QAAQ,CAACW,GAAT,CAAa,CAACC,iBAAD,EAAoBC,KAApB,kBAEZ;AAAgB,UAAA,SAAS,EAAC,iBAA1B;AAAA,oBAA6CD,iBAAiB,CAACE;AAA/D,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAFD;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFkC;AAAA;AAAA;AAAA;AAAA,UADxC;AAkBD,CAvCM;;GAAMf,a;;KAAAA,a","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const GetAllProject = (props) => {\n  const [projects, setAllProjects] = useState(null);\n\n  // + adding the use\n  useEffect(() => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n\n    };\n    getData();\n\n    // we will use async/await to fetch this data\n    async function getData() {\n      const response = await fetch(\"http://localhost:8000/getProjectList\", requestOptions);\n      const apiResponseData = await response.json();\n      //console.log(apiResponseData);//remove this after use\n      setAllProjects(apiResponseData);\n    }\n  }, []); // <- you may need to put the setBooks function in this array\n\n  return (\n    props.bucketNameDropdown==true ? \"\" : <div>\n      {projects && (\n        <div className=\"projects\">\n          <ul className=\"list-group list-group-flush\">\n            {/* loop over the books */}\n            {projects.map((individualProject, index) => (\n\n              <li key={index} className=\"list-group-item\">{individualProject.bucket_name}</li>\n\n            ))}\n          </ul>\n\n        </div>\n      )}\n    </div>\n    \n  )\n}"]},"metadata":{},"sourceType":"module"}